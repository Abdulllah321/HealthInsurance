@model HealthInsurance.Entities.PolicyIndexViewModel

@{
    ViewData["Title"] = "Policy";
}

<h1 class="text-3xl font-semibold mb-6">Policy Index</h1>

<div class="flex justify-between mb-4">
    <a asp-action="Create" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold text-sm rounded-lg shadow-md">Create New</a>

    <form method="get" class="flex items-center">
        <input type="text" name="searchString" value="@Model.SearchString" placeholder="Search policies..." class="block w-full sm:w-80 border border-gray-300 dark:border-gray-600 rounded-l-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 pl-4 py-2 transition duration-150 ease-in-out" />
        <button type="submit" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold text-sm rounded-r-lg shadow-md">Search</button>
    </form>
</div>

<div class="overflow-hidden shadow-lg rounded-lg">
    <table class="min-w-full bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-md">
        <thead class="bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-200">
            <tr>
                <th class="py-3 px-4 text-left font-semibold text-sm">
                    @Html.DisplayNameFor(model => model.Policies.First().PolicyName)
                </th>
                <th class="py-3 px-4 text-left font-semibold text-sm">
                    @Html.DisplayNameFor(model => model.Policies.First().PolicyDescription)
                </th>
                <th class="py-3 px-4 text-left font-semibold text-sm">
                    @Html.DisplayNameFor(model => model.Policies.First().Amount)
                </th>
                <th class="py-3 px-4 text-left font-semibold text-sm">
                    @Html.DisplayNameFor(model => model.Policies.First().Emi)
                </th>
                <th class="py-3 px-4 text-left font-semibold text-sm">
                    @Html.DisplayNameFor(model => model.Policies.First().CompanyDetails.CompanyName)
                </th>
                <th class="py-3 px-4 text-left font-semibold text-sm">
                    @Html.DisplayNameFor(model => model.Policies.First().HospitalInfo.HospitalName)
                </th>
                <th class="py-3 px-4 text-center font-semibold text-sm">Actions</th>
            </tr>
        </thead>
        <tbody class="bg-white dark:bg-gray-800">
            @foreach (var item in Model.Policies)
            {
                <tr class="border-t border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition duration-150 ease-in-out">
                    <td class="py-3 px-4">
                        @Html.DisplayFor(modelItem => item.PolicyName)
                    </td>
                    <td class="py-3 px-4">
                        @Html.DisplayFor(modelItem => item.PolicyDescription)
                    </td>
                    <td class="py-3 px-4">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td class="py-3 px-4">
                        @Html.DisplayFor(modelItem => item.Emi)
                    </td>
                    <td class="py-3 px-4">
                        @Html.DisplayFor(modelItem => item.CompanyDetails.CompanyName)
                    </td>
                    <td class="py-3 px-4">
                        @Html.DisplayFor(modelItem => item.HospitalInfo.HospitalName)
                    </td>
                    <td class="py-3 px-4 text-center">
                        <a asp-action="Edit" asp-route-id="@item.PolicyId" class="text-blue-600 hover:underline">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.PolicyId" class="text-blue-600 hover:underline">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.PolicyId" class="text-red-600 hover:underline">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="mt-6 flex items-center justify-between">
    <div class="text-gray-600 dark:text-gray-300">
        Page @Model.CurrentPage of @Model.TotalPages
    </div>
    <div class="flex space-x-2">
        @if (Model.CurrentPage > 1)
        {
            <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" class="inline-flex items-center px-4 py-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500 text-gray-800 dark:text-gray-200 rounded-lg transition duration-150 ease-in-out">Previous</a>
        }

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.CurrentPage)
            {
                <span class="bg-blue-600 text-white py-2 px-4 rounded-lg">@i</span>
            }
            else
            {
                <a asp-action="Index" asp-route-page="@i" class="inline-flex items-center px-4 py-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500 text-gray-800 dark:text-gray-200 rounded-lg transition duration-150 ease-in-out">@i</a>
            }
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" class="inline-flex items-center px-4 py-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500 text-gray-800 dark:text-gray-200 rounded-lg transition duration-150 ease-in-out">Next</a>
        }
    </div>
</div>
