@model HealthInsurance.Controllers.PolicyApprovalIndexViewModel

<div class="container mx-auto p-4">
    <h1 class="text-5xl font-bold py-4 text-center text-gray-900 dark:text-white">Policy Approvals</h1>

    <div class="flex justify-end mb-4">
        <a href="@Url.Action("Create")" class="bg-green-500 text-white hover:bg-green-600 dark:bg-green-700 dark:hover:bg-green-800 rounded-md px-4 py-2">Create New Approval</a>
    </div>

    <div class="bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-md">
        @if (Model.PolicyApprovals.Any())
        {
            <table class="min-w-full bg-white dark:bg-gray-800">
                <thead class="bg-gray-600 text-white">
                    <tr>
                        <th class="py-2 px-4 border-b border-gray-300 dark:border-gray-700">Policy</th>
                        <th class="py-2 px-4 border-b border-gray-300 dark:border-gray-700">Date</th>
                        <th class="py-2 px-4 border-b border-gray-300 dark:border-gray-700">Amount</th>
                        <th class="py-2 px-4 border-b border-gray-300 dark:border-gray-700">Approved</th>
                        <th class="py-2 px-4 border-b border-gray-300 dark:border-gray-700">Reason</th>
                        <th class="py-2 px-4 border-b border-gray-300 dark:border-gray-700">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.PolicyApprovals)
                    {
                        <tr class="relative border-b border-gray-300 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800">
                            <td class="py-2 px-4">@item.Policy.PolicyName</td>
                            <td class="py-2 px-4">@item.Date.ToShortDateString()</td>
                            <td class="py-2 px-4">@item.Amount</td>
                            <td class="py-2 px-4">@item.Approved</td>
                            <td class="py-2 px-4">@item.Reason</td>
                            <td class="py-2 px-4 text-right">
                                <!-- Three dots icon (Vertical Ellipsis) -->
                                <button id="toggleButton-@item.Id" type="button" class="text-gray-500 relative dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 w-10" onclick="toggleDropdown('dropdown-@item.Id')">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>

                                <!-- Dropdown menu -->
                                <div id="dropdown-@item.Id" class="transition-all duration-300 absolute right-0 mt-2 top-3/4 w-40 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md shadow-lg z-10 opacity-0 hidden text-left overflow-hidden" onclick="event.stopPropagation();">
                                    <a href="@Url.Action("Details", new { id = item.Id })" class="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">Details</a>
                                    <a href="@Url.Action("Edit", new { id = item.Id })" class="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">Edit</a>
                                    <a href="@Url.Action("Delete", new { id = item.Id })" class="block px-4 py-2 text-sm text-red-500 dark:text-red-400 hover:bg-red-100 dark:hover:bg-red-600 hover:text-white">Delete</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="text-center my-10 text-gray-500 dark:text-gray-400 text-3xl font-bold">
                No Approvals found.
            </div>
        }
    </div>

    <!-- Pagination -->
    <div class="flex justify-center my-4">
        <nav aria-label="Page navigation">
            <ul class="inline-flex items-center space-x-2">
                <!-- Previous Page Button -->
                @if (Model.CurrentPage > 1)
                {
                    <li>
                        <a href="@Url.Action("Index", new { pageNumber = Model.CurrentPage - 1 })" class="px-3 py-2 text-sm font-medium text-blue-600 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 dark:text-blue-500 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700" aria-label="Previous">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>
                }

                <!-- Page Number Buttons -->
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li>
                        <a href="@Url.Action("Index", new { pageNumber = i })" class="px-3 py-2 text-sm font-medium @(Model.CurrentPage == i ? "text-white bg-blue-600 border border-blue-600 dark:bg-blue-500 dark:border-blue-500" : "text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 dark:text-gray-400 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700") rounded-lg" aria-label="@i">
                            @i
                        </a>
                    </li>
                }

                <!-- Next Page Button -->
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li>
                        <a href="@Url.Action("Index", new { pageNumber = Model.CurrentPage + 1 })" class="px-3 py-2 text-sm font-medium text-blue-600 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 dark:text-blue-500 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700" aria-label="Next">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<script>
    function toggleDropdown(id) {
        const dropdown = document.getElementById(id);
        const isDropdownVisible = !dropdown.classList.contains('hidden');

        // Show the clicked dropdown if it was not already visible
        if (!isDropdownVisible) {
            dropdown.classList.remove('hidden');
            setTimeout(() => {
                dropdown.classList.remove('opacity-0');
            }, 100);
        }
    }

    // Optional: Close the dropdown if clicking outside
    document.addEventListener('click', function (event) {
        if (!event.target.closest('[id^="toggleButton"]') && !event.target.closest('[id^="dropdown-"]')) {
            document.querySelectorAll('[id^="dropdown-"]').forEach(dropdown => {
                dropdown.classList.add('opacity-0');
                setTimeout(() => {
                    dropdown.classList.add('hidden');
                }, 300)
            });
        }
    });
</script>
